<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on A Lazy Coder</title>
    <link>https://hundredwz.github.io/tags/golang/</link>
    <description>Recent content in golang on A Lazy Coder</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 08 Mar 2019 08:25:56 +0000</lastBuildDate>
    
	<atom:link href="https://hundredwz.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tendermint阅读XI</title>
      <link>https://hundredwz.github.io/post/Tendermint%E9%98%85%E8%AF%BBXI/</link>
      <pubDate>Fri, 08 Mar 2019 08:25:56 +0000</pubDate>
      
      <guid>https://hundredwz.github.io/post/Tendermint%E9%98%85%E8%AF%BBXI/</guid>
      <description>&lt;p&gt;我们现在来看一下Tendermint的工作流程，接上我们第一篇文章了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tendermint阅读X</title>
      <link>https://hundredwz.github.io/post/Tendermint%E9%98%85%E8%AF%BBX/</link>
      <pubDate>Fri, 08 Mar 2019 06:26:00 +0000</pubDate>
      
      <guid>https://hundredwz.github.io/post/Tendermint%E9%98%85%E8%AF%BBX/</guid>
      <description>&lt;p&gt;我们要开始看最难的了，共识模块，这块事区块链的核心，也是流程多到让人痛苦，我们就尽力的看一看吧。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tendermint阅读IX</title>
      <link>https://hundredwz.github.io/post/Tendermint%E9%98%85%E8%AF%BBIX/</link>
      <pubDate>Fri, 08 Mar 2019 03:11:00 +0000</pubDate>
      
      <guid>https://hundredwz.github.io/post/Tendermint%E9%98%85%E8%AF%BBIX/</guid>
      <description>&lt;p&gt;我们现在要啃一个硬骨头了，共识模块。在开始之前，我们先看一下EvidencePool模块，一个合法证据池模块。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tendermint阅读VIII</title>
      <link>https://hundredwz.github.io/post/Tendermint%E9%98%85%E8%AF%BBVIII/</link>
      <pubDate>Wed, 06 Mar 2019 02:32:00 +0000</pubDate>
      
      <guid>https://hundredwz.github.io/post/Tendermint%E9%98%85%E8%AF%BBVIII/</guid>
      <description>&lt;p&gt;我们在上一篇文章中提到，block处理有处理state，以及相应的执行过程。我们这一节就来看一看。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tendermint阅读VII</title>
      <link>https://hundredwz.github.io/post/Tendermint%E9%98%85%E8%AF%BBVII/</link>
      <pubDate>Mon, 04 Mar 2019 02:43:00 +0000</pubDate>
      
      <guid>https://hundredwz.github.io/post/Tendermint%E9%98%85%E8%AF%BBVII/</guid>
      <description>&lt;p&gt;这次我们来看一个复杂的模块，blockchain模块，实际上我个人感觉，叫block模块似乎更好。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tendermint阅读V</title>
      <link>https://hundredwz.github.io/post/Tendermint%E9%98%85%E8%AF%BBV/</link>
      <pubDate>Thu, 28 Feb 2019 01:50:00 +0000</pubDate>
      
      <guid>https://hundredwz.github.io/post/Tendermint%E9%98%85%E8%AF%BBV/</guid>
      <description>&lt;p&gt;我们看完了peer，看点稍微简单点的mempool实现吧。
这个和我们写的abci程序有直接的关联，因此，我们需要仔细阅读下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>写了一个基于golang的博客系统</title>
      <link>https://hundredwz.github.io/post/%E5%86%99%E4%BA%86%E4%B8%80%E4%B8%AA%E5%9F%BA%E4%BA%8Egolang%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Wed, 12 Dec 2018 12:20:07 +0000</pubDate>
      
      <guid>https://hundredwz.github.io/post/%E5%86%99%E4%BA%86%E4%B8%80%E4%B8%AA%E5%9F%BA%E4%BA%8Egolang%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;p&gt;最近这段时间，把所有的空闲无聊时间都利用了下，通过使用gin框架，开发了自己的第一套博客系统。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>golang的slice处理</title>
      <link>https://hundredwz.github.io/post/golang%E7%9A%84slice%E5%A4%84%E7%90%86/</link>
      <pubDate>Mon, 19 Nov 2018 09:17:00 +0000</pubDate>
      
      <guid>https://hundredwz.github.io/post/golang%E7%9A%84slice%E5%A4%84%E7%90%86/</guid>
      <description>&lt;p&gt;今天在看《go in action》的时候，看到切片这一章对于切片分配有点不太理解，做了几个实验理解了，感觉很有意义，记录下来。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>boltdb阅读IV</title>
      <link>https://hundredwz.github.io/post/boltdb%E9%98%85%E8%AF%BBIV/</link>
      <pubDate>Sun, 04 Nov 2018 08:10:50 +0000</pubDate>
      
      <guid>https://hundredwz.github.io/post/boltdb%E9%98%85%E8%AF%BBIV/</guid>
      <description>&lt;p&gt;我们在前面的文章中创建了一个数据库，接下来就要对数据库进行操作了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>boltdb阅读III</title>
      <link>https://hundredwz.github.io/post/boltdb%E9%98%85%E8%AF%BBIII/</link>
      <pubDate>Fri, 02 Nov 2018 08:37:00 +0000</pubDate>
      
      <guid>https://hundredwz.github.io/post/boltdb%E9%98%85%E8%AF%BBIII/</guid>
      <description>&lt;p&gt;我们上一篇主要分析了boltdb初始化，也就是创建一个新的数据库的过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>boltdb阅读II</title>
      <link>https://hundredwz.github.io/post/boltdb%E9%98%85%E8%AF%BBII/</link>
      <pubDate>Fri, 02 Nov 2018 07:48:00 +0000</pubDate>
      
      <guid>https://hundredwz.github.io/post/boltdb%E9%98%85%E8%AF%BBII/</guid>
      <description>&lt;p&gt;我们继续上篇的bolt源码阅读。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>boltdb阅读I</title>
      <link>https://hundredwz.github.io/post/boltdb%E9%98%85%E8%AF%BBI/</link>
      <pubDate>Sun, 14 Oct 2018 02:44:00 +0000</pubDate>
      
      <guid>https://hundredwz.github.io/post/boltdb%E9%98%85%E8%AF%BBI/</guid>
      <description>&lt;p&gt;最近这两天闲了一些，准备好好学一下golang。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解决golang循环依赖</title>
      <link>https://hundredwz.github.io/post/%E8%A7%A3%E5%86%B3golang%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96/</link>
      <pubDate>Sat, 14 Jul 2018 02:34:43 +0000</pubDate>
      
      <guid>https://hundredwz.github.io/post/%E8%A7%A3%E5%86%B3golang%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96/</guid>
      <description>&lt;p&gt;最近开发项目的时候，遇到了一个go里面很不好解决的问题，循环引用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>golang getaddrinfow错误</title>
      <link>https://hundredwz.github.io/post/golang-getaddrinfow%E9%94%99%E8%AF%AF/</link>
      <pubDate>Sat, 14 Jul 2018 01:16:43 +0000</pubDate>
      
      <guid>https://hundredwz.github.io/post/golang-getaddrinfow%E9%94%99%E8%AF%AF/</guid>
      <description>&lt;p&gt;最近在开发一个golang的web项目，遇到了一个很奇怪的问题，服务一直无法启动。发现错误的原因让人很无奈。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>golang读取mysql中datetime格式</title>
      <link>https://hundredwz.github.io/post/golang%E8%AF%BB%E5%8F%96mysql%E4%B8%ADdatetime%E6%A0%BC%E5%BC%8F/</link>
      <pubDate>Fri, 15 Jun 2018 07:09:40 +0000</pubDate>
      
      <guid>https://hundredwz.github.io/post/golang%E8%AF%BB%E5%8F%96mysql%E4%B8%ADdatetime%E6%A0%BC%E5%BC%8F/</guid>
      <description>&lt;p&gt;在做一个小项目的时候，需要使用go从数据库里面读取时间信息，但是总会出错，在网上查了查，发现还是挺容易解决的。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>